<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "closure #1 in MapViewController.viewDidLoad():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "SwiftLocation.Locator.currentLocation!.coordinate">
            </PersistentString>
            <PersistentString
               value = "loc.horizontalAccuracy">
            </PersistentString>
            <PersistentString
               value = "loc.coordinates">
            </PersistentString>
            <PersistentString
               value = "self.nodes">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.addAnchors():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "CLLocation(latitude: location.coordinate.latitude, longitude: location.coordinate.longitude).coordinate.latitude">
            </PersistentString>
            <PersistentString
               value = "steps">
            </PersistentString>
            <PersistentString
               value = "step.instructions">
            </PersistentString>
            <PersistentString
               value = "location.coordinate.latitude">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static ObjectsService.getObjects():ObjectsService.swift">
         <PersistentStrings>
            <PersistentString
               value = "(coordinates[0] as! NSArray)[0] as! Double">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in MapViewController.renderer(_:didRenderScene:atTime:):MapViewController+Extension+AR.swift">
         <PersistentStrings>
            <PersistentString
               value = " self!.routeFinishView == nil">
            </PersistentString>
            <PersistentString
               value = "projectionPoint.x">
            </PersistentString>
            <PersistentString
               value = "UIScreen.main.bounds">
            </PersistentString>
            <PersistentString
               value = "screenMidToProjectionLine.intersection(withRect: UIScreen.main.bounds) ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavigationService.calculateSteps(destination:request:completion:):NavigationService.swift">
         <PersistentStrings>
            <PersistentString
               value = "destination.coordinates">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.museumClick(_:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "map.annotations">
            </PersistentString>
            <PersistentString
               value = "ob.location.coordinate">
            </PersistentString>
            <PersistentString
               value = "sceneView">
            </PersistentString>
            <PersistentString
               value = "UIColor.green">
            </PersistentString>
            <PersistentString
               value = "myLocation.coordinates">
            </PersistentString>
            <PersistentString
               value = "view.subviews">
            </PersistentString>
            <PersistentString
               value = "map.annotations.count">
            </PersistentString>
            <PersistentString
               value = "annotationMuseums">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.viewDidLoad():MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.renderer(_:didRenderScene:atTime:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "routeFinishNode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.renderer(_:didRenderScene:atTime:):MapViewController+Extension+AR.swift">
         <PersistentStrings>
            <PersistentString
               value = "mainNodeCoordinate.distance(from: SwiftLocation.Locator.currentLocation!)">
            </PersistentString>
            <PersistentString
               value = "self.instructions">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.calculateLeg(for:and:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "locations">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.clearObjects(_:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "poiHolder">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CLLocationManager.requestAuthorization(level:):Shared.swift">
      </ContextState>
      <ContextState
         contextName = "static ObjectsService.readJson():ObjectsService.swift">
      </ContextState>
      <ContextState
         contextName = "static Matrix.transformMatrix(for:originLocation:location:):Matrix.swift">
         <PersistentStrings>
            <PersistentString
               value = "Float(location.distance(from: originLocation))">
            </PersistentString>
            <PersistentString
               value = " Float(originLocation.distance(from: location))">
            </PersistentString>
            <PersistentString
               value = "location.coordinates">
            </PersistentString>
            <PersistentString
               value = "originLocation.coordinates">
            </PersistentString>
            <PersistentString
               value = "distance">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.loadObjects():MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in MapViewController.renderer(_:didRenderScene:atTime:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.routeDistanceLabel">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static ObjectsService.getObjects(fileName:):ObjectsService.swift">
         <PersistentStrings>
            <PersistentString
               value = "CFStringTransform(mutableString, nil, kCFStringTransformToUnicodeName, false)">
            </PersistentString>
            <PersistentString
               value = "(mutableString as String)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.drawRouteOnMap(destination:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "destination.coordinates!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavigationService.getLegs(route:labels:):NavigationService.swift">
         <PersistentStrings>
            <PersistentString
               value = "labels[currentLegIndex]">
            </PersistentString>
            <PersistentString
               value = "storage.labels.index(of: labels[currentLegIndex])">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in MapViewController.drawRouteInAR(destination:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "route.steps">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.onSceneTap(gesture:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.contains(map)">
            </PersistentString>
            <PersistentString
               value = "viewNew.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavigationService.setNavigation(forRoute:):NavigationService.swift">
      </ContextState>
      <ContextState
         contextName = "specialized closure #1 in MapViewController.renderer(_:didRenderScene:atTime:):MapViewController+Extension+AR.swift">
         <PersistentStrings>
            <PersistentString
               value = "routeFinishView.bounds.size ">
            </PersistentString>
            <PersistentString
               value = "routeFinishView.bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NavigationService.setExtraNodes(nodes:objects:):NavigationService.swift">
         <PersistentStrings>
            <PersistentString
               value = "objects[index].image.imageAsset">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.loadMuseums(_:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIColor.clear.cgColor">
            </PersistentString>
            <PersistentString
               value = "museum.layer.shadowColor != UIColor.green.cgColor">
            </PersistentString>
            <PersistentString
               value = "(sender as! UIButton).layer.shadowColor">
            </PersistentString>
            <PersistentString
               value = "museum.layer.shadowColor">
            </PersistentString>
            <PersistentString
               value = "UIColor.green.cgColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in NavigationService.calculateSteps(destination:request:completion:):NavigationService.swift">
         <PersistentStrings>
            <PersistentString
               value = "route.steps">
            </PersistentString>
            <PersistentString
               value = "error.debugDescription">
            </PersistentString>
            <PersistentString
               value = "route">
            </PersistentString>
            <PersistentString
               value = "routes[0].legs[0]">
            </PersistentString>
            <PersistentString
               value = "finalRoute">
            </PersistentString>
            <PersistentString
               value = "routes">
            </PersistentString>
            <PersistentString
               value = "response.routes ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static ExtraNavigationService.divideRoute(route:):ExtraNavigationService.swift">
         <PersistentStrings>
            <PersistentString
               value = "step">
            </PersistentString>
            <PersistentString
               value = "offsetInLeg + CGFloat(5.0)">
            </PersistentString>
            <PersistentString
               value = "legs">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in MapViewController.drawRouteInAR(destination:):MapViewController+Extension+AR.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in MapViewController.drawRouteOnMap(destination:):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "error.debugDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
